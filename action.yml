name: "Rhaid Autofix"
description: "Repo hygiene + AI guardrails â€” scan/fix with Rhaid by Camwood Inc."
branding:
  icon: "check-circle"
  color: "green"
inputs:
  path:
    description: "Path to scan"
    required: true
  mode:
    description: "scan or fix"
    required: false
    default: "scan"
  args:
    description: "Additional CLI args for Rhaid"
    required: false
    default: "--json"
  install:
    description: "Install method: pipx_pypi | pipx_git | vendored"
    required: false
    default: "pipx_pypi"
  source_url:
    description: "Repo URL (pipx_git)"
    required: false
  source_ref:
    description: "Git ref/tag (pipx_git)"
    required: false
  python-version:
    description: "Python version"
    required: false
    default: "3.11"
runs:
  using: "composite"
  steps:
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ inputs.python-version }}

    - name: Install pipx
      shell: bash
      run: |
        python -m pip install -U pip pipx || true
        python -m pipx ensurepath || true

    - name: Install Rhaid
      shell: bash
      run: |
        set -euo pipefail
        case "${{ inputs.install }}" in
          pipx_pypi) pipx install rhaid ;;
          pipx_git)
            if [ -z "${{ inputs.source_url }}" ]; then echo "source_url required"; exit 2; fi
            REF="${{ inputs.source_ref || 'main' }}"
            pipx install "git+${{ inputs.source_url }}@${REF}"
            ;;
          vendored)
            pipx install ./rhaid_pkg
            ;;
          *)
            echo "Unknown install method"; exit 2 ;;
        esac

    - name: Run Rhaid
      shell: bash
      run: |
        set -euo pipefail
        rhaid --path "${{ inputs.path }}" --mode "${{ inputs.mode }}" ${{ inputs.args }}
